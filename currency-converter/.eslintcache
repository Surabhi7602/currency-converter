[{"/Users/surabhishetty/currency-converter/src/App.js":"1","/Users/surabhishetty/currency-converter/src/index.js":"2","/Users/surabhishetty/currency-converter/src/CurrencyRow.js":"3"},{"size":2062,"mtime":1609339889708,"results":"4","hashOfConfig":"5"},{"size":197,"mtime":1609324483594,"results":"6","hashOfConfig":"5"},{"size":618,"mtime":1609338853199,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1lvv7ml",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/surabhishetty/currency-converter/src/App.js",["15"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n\n  const [currencyOptions, setCurrencyOtions] = useState([])\n  const [fromCurrency, setfromCurrency] = useState()\n  const [toCurrency, settoCurrency] = useState()\n  const [amt, setamt] = useState(1)\n  const[exrate, setexrate] = useState()\n  const [amtInFromCurrency, setamtInFromCurrency] = useState(true)\n\n  let toAmount , fromAmount\n\n  if (amtInFromCurrency){\n    fromAmount =amt\n    toAmount = amt*exrate\n  }\n  else{\n    toAmount =amt\n    fromAmount =amt/exrate\n  }\n  \n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        \n      setCurrencyOtions([data.base, ...Object.keys(data.rates)])\n      setfromCurrency(data.base)\n      settoCurrency(Object.keys(data.rates)[11])\n      setexrate(data.rates[Object.keys(data.rates)[11]])\n      \n      })\n  },[])\n\n  useEffect(() => {if (fromCurrency != null && toCurrency != null)\n    {fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setexrate(data.rates[toCurrency]))\n\n  }}, [fromCurrency, toCurrency]\n  )\n\n  function handlefromamtchange(e){\n    setamt (e.target.value)\n    setamtInFromCurrency(true)\n  }\n\n  function handletoamtchange(e){\n    setamt (e.target.value)\n    setamtInFromCurrency(false)\n  }\n\n  return (\n    <div>\n      <h1>CURRENCY CONVERTER</h1>\n      < CurrencyRow currencyOptions = {currencyOptions}\n      selectCurrency = {fromCurrency}\n      onChangeCurrency = {e => setfromCurrency(e.target.value)}\n      onChangeamt = {handlefromamtchange}\n      amt = {fromAmount}\n      />\n      <div><h1>=</h1></div>\n      < CurrencyRow currencyOptions = {currencyOptions} \n      selectCurrency = {toCurrency}\n      onChangeCurrency = {e => settoCurrency(e.target.value)}\n      onChangeamt = {handletoamtchange}\n      amt = {fromAmount}\n      amt = {toAmount}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/surabhishetty/currency-converter/src/index.js",[],"/Users/surabhishetty/currency-converter/src/CurrencyRow.js",[],{"ruleId":"16","severity":1,"message":"17","line":74,"column":7,"nodeType":"18","endLine":74,"endColumn":23},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute"]