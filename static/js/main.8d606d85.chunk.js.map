{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectCurrency","onChangeCurrency","onChangeamt","amt","type","className","value","onChange","map","option","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOtions","fromCurrency","setfromCurrency","toCurrency","settoCurrency","setamt","exrate","setexrate","amtInFromCurrency","setamtInFromCurrency","useEffect","fetch","then","res","json","data","base","Object","keys","rates","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAuBeA,MArBf,SAAqBC,GAAQ,IAErBC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,eACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,YACAC,EACAL,EADAK,IAGJ,OACI,gCACI,uBAAOC,KAAO,SAASC,UAAY,QAAQC,MAASH,EAAKI,SAAYL,IACrE,wBAAQI,MAASN,EAAgBO,SAAYN,EAA7C,SACKF,EAAgBS,KAAI,SAAAC,GAAM,OACvB,wBAAQH,MAASG,EAAjB,SAAyCA,GAATA,YCZ9CC,EAAW,yCA2EFC,MAzEf,WAAgB,IASVC,EAAWC,EATF,EAEgCC,mBAAS,IAFzC,mBAENf,EAFM,KAEWgB,EAFX,OAG2BD,qBAH3B,mBAGNE,EAHM,KAGQC,EAHR,OAIuBH,qBAJvB,mBAINI,EAJM,KAIMC,EAJN,OAKSL,mBAAS,GALlB,mBAKNX,EALM,KAKDiB,EALC,OAMcN,qBANd,mBAMPO,EANO,KAMCC,EAND,OAOqCR,oBAAS,GAP9C,mBAONS,EAPM,KAOaC,EAPb,KAoDb,OAzCID,GACFV,EAAYV,EACZS,EAAWT,EAAIkB,IAGfT,EAAUT,EACVU,EAAYV,EAAIkB,GAIlBI,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAENf,EAAkB,CAACe,EAAKC,MAAP,mBAAgBC,OAAOC,KAAKH,EAAKI,UAClDjB,EAAgBa,EAAKC,MACrBZ,EAAca,OAAOC,KAAKH,EAAKI,OAAO,KACtCZ,EAAUQ,EAAKI,MAAMF,OAAOC,KAAKH,EAAKI,OAAO,WAG/C,IAEFT,qBAAU,WAA2B,MAAhBT,GAAsC,MAAdE,GAC1CQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC9CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIR,EAAUQ,EAAKI,MAAMhB,SAErC,CAACF,EAAcE,IAcjB,gCACE,oDACA,cAAE,EAAF,CAAcnB,gBAAmBA,EACjCC,eAAkBgB,EAClBf,iBAAoB,SAAAkC,GAAC,OAAIlB,EAAgBkB,EAAEC,OAAO9B,QAClDJ,YAhBJ,SAA6BiC,GAC3Bf,EAAQe,EAAEC,OAAO9B,OACjBkB,GAAqB,IAenBrB,IAAOU,IAEP,8BAAK,qCACL,cAAE,EAAF,aAAcd,gBAAmBA,EACjCC,eAAkBkB,EAClBjB,iBAAoB,SAAAkC,GAAC,OAAIhB,EAAcgB,EAAEC,OAAO9B,QAChDJ,YAlBJ,SAA2BiC,GACzBf,EAAQe,EAAEC,OAAO9B,OACjBkB,GAAqB,IAiBnBrB,IAAOU,GAJP,MAKOD,QCrEbyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8d606d85.chunk.js","sourcesContent":["import React from 'react'\n\nfunction CurrencyRow(props) {\n    const{\n        currencyOptions,\n        selectCurrency,\n        onChangeCurrency,\n        onChangeamt,\n        amt\n    } = props\n\n    return (\n        <div>\n            <input type = \"number\" className = \"input\" value = {amt} onChange = {onChangeamt}></input>\n            <select value = {selectCurrency} onChange = {onChangeCurrency} >\n                {currencyOptions.map(option => (\n                    <option value = {option} key = {option}>{option}</option>\n                ))}\n            </select>\n        </div>\n    )\n}\n\nexport default CurrencyRow\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'https://api.exchangeratesapi.io/latest'\n\nfunction App() {\n\n  const [currencyOptions, setCurrencyOtions] = useState([])\n  const [fromCurrency, setfromCurrency] = useState()\n  const [toCurrency, settoCurrency] = useState()\n  const [amt, setamt] = useState(1)\n  const[exrate, setexrate] = useState()\n  const [amtInFromCurrency, setamtInFromCurrency] = useState(true)\n\n  let toAmount , fromAmount\n\n  if (amtInFromCurrency){\n    fromAmount =amt\n    toAmount = amt*exrate\n  }\n  else{\n    toAmount =amt\n    fromAmount =amt/exrate\n  }\n  \n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        \n      setCurrencyOtions([data.base, ...Object.keys(data.rates)])\n      setfromCurrency(data.base)\n      settoCurrency(Object.keys(data.rates)[11])\n      setexrate(data.rates[Object.keys(data.rates)[11]])\n      \n      })\n  },[])\n\n  useEffect(() => {if (fromCurrency != null && toCurrency != null)\n    {fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(res => res.json())\n        .then(data => setexrate(data.rates[toCurrency]))\n\n  }}, [fromCurrency, toCurrency]\n  )\n\n  function handlefromamtchange(e){\n    setamt (e.target.value)\n    setamtInFromCurrency(true)\n  }\n\n  function handletoamtchange(e){\n    setamt (e.target.value)\n    setamtInFromCurrency(false)\n  }\n\n  return (\n    <div>\n      <h1>CURRENCY CONVERTER</h1>\n      < CurrencyRow currencyOptions = {currencyOptions}\n      selectCurrency = {fromCurrency}\n      onChangeCurrency = {e => setfromCurrency(e.target.value)}\n      onChangeamt = {handlefromamtchange}\n      amt = {fromAmount}\n      />\n      <div><h1>=</h1></div>\n      < CurrencyRow currencyOptions = {currencyOptions} \n      selectCurrency = {toCurrency}\n      onChangeCurrency = {e => settoCurrency(e.target.value)}\n      onChangeamt = {handletoamtchange}\n      amt = {fromAmount}\n      amt = {toAmount}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}